
[color]
	ui = true
[alias]
	ad = add --all .
	br = branch
	bl = blame
	chp = cherry-pick
	chpa = cherry-pick --abort
	chpc = cherry-pick --continue
	ci = commit -v
	cia = commit -v --amend
	cim = commit -m
	cis = commit -v -S
	cias = commit -v --amend -S
	cims = commit -m -S
	cl = clone
	cl1 = clone --depth 1
	cl10 = clone --depth 10
	co = checkout
	cob = checkout -b
	df = diff
	dfc = diff --cached
	dfw = diff -w
	dfcw = diff --cached -w
	dfs = diff --stat --summary
	fh = fetch
	fhu = fetch upstream
	mg = merge
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase -i
	rbm = "!fn(){ if git show-ref --verify --quiet refs/heads/master; then git rebase master; elif git show-ref --verify --quiet refs/heads/main; then git rebase main; else echo 'Both master and main branch not found!' >&2; return 1; fi; };fn"
	rmt = remote
	rmtv = remote -v
	rmta = remote add
	rmtau = remote add upstream
	rs = reset
	rst = reset
	rsh = reset --hard
	rv = revert
	rvt = revert
	pl = pull
	plr = pull --rebase
	ps = push
	sh = stash
	sm = submodule
	st = status
	serve = !git daemon --reuseaddr --verbose  --base-path=. --export-all ./.git
	lg = log
	lgp = log -p
	lgpw = log -p -w
	lgs = log --stat --summary
	lgt = log --abbrev-commit --decorate --graph --color --pretty='format:%C(yellow)%h%Creset% s %C(magenta)%an%Creset %C(green)%ar%Creset'
	lgf = log --follow
	lgpf = log -p --follow
	lgpwf = log -p -w --follow
	lgsf = log --stat --summary --follow
	lgtf = log --abbrev-commit --decorate --graph --color --pretty='format:%C(yellow)%h%Creset% s %C(magenta)%an%Creset %C(green)%ar%Creset' --follow
	pushall = "!fn(){ for a in `git remote`; do git push $a $(git rev-parse --abbrev-ref HEAD); done; };fn"
	pullall = "!fn(){ for a in `git remote`; do git pull $a $(git rev-parse --abbrev-ref HEAD); done; };fn"
	fetchall = "!fn(){ for a in `git remote`; do git fetch $a; done; };fn"
	fetchmulti = "!fn(){ for a in $@; do git fetch $a; done; };fn"
	fetchpr = "!fn(){ for a in $@; do git fetch origin pull/$a/head:$a -f; done; };fn"
	fetchmr = "!fn(){ for a in $@; do git fetch origin merge-requests/$a/head:$a -f; done; };fn"
	cleanup = "!fn(){ for a in `git remote`; do git remote prune $a; done && git reflog expire --verbose --all --expire=now && git gc --prune=now --aggressive ;};fn"
[push]
	# for only push to current branch
	default = tracking
[core]
	editor = vim
	excludesfile = ~/.gitignore_global
	pager = ~/.git/contrib/diff-highlight | less
	preloadindex = true
	autocrlf = false
	ignorecase = false
	fscache = true
[mergetool]
	keepBackup = false
[gui]
	encoding = utf-8
[i18n]
	commitencoding = utf-8
	logoutputencoding = utf-8
[help]
	autocorrect = 10
[credential]
	helper = cache --timeout=600
[branch "master"]
	rebase = true
[branch "dev"]
	rebase = true
[branch]
	autosetuprebase = always
[url "git@github.com:"]
	#insteadOf = git://github.com/
	#insteadOf = http://github.com/
	#insteadOf = https://github.com/
[grep]
	lineNumber = true
[diff]
	compactionHeuristic = true
